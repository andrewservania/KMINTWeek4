#include "CowPursuitState.h"
#include "Arena.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Default constructor. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

CowPursuitState::CowPursuitState()
{
	
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Destructor. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

CowPursuitState::~CowPursuitState()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Take action right after entering the state. 
/// 			The start() function is called. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="cow">	[in,out] If non-null, the cow. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void CowPursuitState::Enter(Cow* cow)
{
	Start(cow);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	A check will be done to determine whether the cow has already
/// 			started pursuing the rabbit. If it hasn't yet, the Start() function
/// 			will be called. /summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="cow">	[in,out] If non-null, the cow. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void CowPursuitState::Execute(Cow* cow)
{
	if (hasStarted == false)
	{
		Start(cow);
		hasStarted = true;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Take action right before exiting the state.
/// 			The hasStarted flag will be set to false. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="cow">	[in,out] If non-null, the cow. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void CowPursuitState::Exit(Cow* cow)
{
	hasStarted = false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	The cow will start pursuing the rabbit. </summary>
///
/// <remarks>	Andrew Servania,. </remarks>
///
/// <param name="cow">	[in,out] If non-null, the cow. </param>
////////////////////////////////////////////////////////////////////////////////////////////////////

void CowPursuitState::Start(Cow* cow)
{
	cow->Steering()->PursuitOn(Arena::Instance()->rabbit);
}